 15      , pv_postal_code => '84606'
 16      , pv_street_address => '2118 South 7th East'
 17      , pv_telephone_type => 'HOME'
 18      , pv_country_code => '001'
 19      , pv_area_code => '801'
 20      , pv_telephone_number => '423-1236' );
 21  END;
 22  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Insert fourth contact.
SQL> BEGIN
  2    /* Call the contact_insert procedure. */
  3    contact_insert(
  4        pv_member_type => 'INDIVIDUAL'
  5      , pv_account_number => 'R11-514-37'
  6      , pv_credit_card_number => '3333-1111-1111-2222'
  7      , pv_credit_card_type => 'VISA_CARD'
  8      , pv_first_name => 'Elizabeth'
  9      , pv_middle_name => 'Jane'
 10      , pv_last_name => 'Royal'
 11      , pv_contact_type => 'CUSTOMER'
 12      , pv_address_type => 'HOME'
 13      , pv_city => 'Provo'
 14      , pv_state_province => 'Utah'
 15      , pv_postal_code => '84606'
 16      , pv_street_address => '2228 South 14th East'
 17      , pv_telephone_type => 'HOME'
 18      , pv_country_code => '001'
 19      , pv_area_code => '801'
 20      , pv_telephone_number => '423-1237' );
 21  END;
 22  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Insert fifth contact.
SQL> BEGIN
  2    /* Call the contact_insert procedure. */
  3    contact_insert(
  4        pv_member_type => 'INDIVIDUAL'
  5      , pv_account_number => 'R11-514-38'
  6      , pv_credit_card_number => '1111-1111-3333-1111'
  7      , pv_credit_card_type => 'VISA_CARD'
  8      , pv_first_name => 'Brian'
  9      , pv_middle_name => 'Nathan'
 10      , pv_last_name => 'Smith'
 11      , pv_contact_type => 'CUSTOMER'
 12      , pv_address_type => 'HOME'
 13      , pv_city => 'Spanish Fork'
 14      , pv_state_province => 'Utah'
 15      , pv_postal_code => '84606'
 16      , pv_street_address => '333 North 2nd East'
 17      , pv_telephone_type => 'HOME'
 18      , pv_country_code => '001'
 19      , pv_area_code => '801'
 20      , pv_telephone_number => '423-1238' );
 21  END;
 22  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify five individual rows of chained inserts through
SQL> --   a procedure into the five dependent tables.
SQL> -- ------------------------------------------------------------------
SQL> COL account_number  FORMAT A10     HEADING "Account|Number"
SQL> COL full_name       FORMAT A20  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10     HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT      m.account_number
  2  ,        c.last_name || ', ' || c.first_name
  3  ||  CASE
  4             WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  5           END AS full_name
  6  ,        a.city
  7  ,        a.state_province
  8  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
  9  FROM        member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 10           address a ON c.contact_id = a.contact_id INNER JOIN
 11           street_address sa ON a.address_id = sa.address_id INNER JOIN
 12           telephone t ON c.contact_id = t.contact_id AND a.address_id = t.address_id
 13  WHERE       m.member_type = (SELECT common_lookup_id
 14                            FROM   common_lookup
 15                            WHERE  common_lookup_context = 'MEMBER'
 16                            AND    common_lookup_type = 'INDIVIDUAL');

Account    Name
Number     (Last, First MI)     City         State      Telephone
---------- -------------------- ------------ ---------- ------------------
R11-514-34 Clinton, Goeffrey W  Provo        Utah       001-(801) 423-1234
R11-514-35 Moss, Wendy          Provo        Utah       001-(801) 423-1235
R11-514-36 Gretelz, Simon J     Provo        Utah       001-(801) 423-1236
R11-514-37 Royal, Elizabeth J   Provo        Utah       001-(801) 423-1237
R11-514-38 Smith, Brian N       Spanish Fork Utah       001-(801) 423-1238

5 rows selected.

SQL> 
SQL> -- Commit changes.
SQL> COMMIT;

Commit complete.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
SQL> 
SQL> @@update_members.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   update_members.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  25-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --
SQL> -- ------------------------------------------------------------------
SQL> -- These steps modify the MEMBER table created during Lab #2, by adding
SQL> -- a MEMBER_TYPE column and seeding an appropriate group or individual
SQL> -- account on the basis of how many contacts belong to a member.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Open log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL update_members.txt
SQL> 
SQL> -- Update all MEMBER_TYPE values based on number of dependent CONTACT rows.
SQL> UPDATE member m
  2  SET    member_type =
  3          (SELECT   common_lookup_id
  4           FROM     common_lookup
  5           WHERE    common_lookup_context = 'MEMBER'
  6           AND      common_lookup_type =
  7                     (SELECT  dt.member_type
  8                      FROM   (SELECT   c.member_id
  9                              ,        CASE
 10                                         WHEN COUNT(c.member_id) > 1 THEN 'GROUP'
 11                                         ELSE 'INDIVIDUAL'
 12                                       END AS member_type
 13                              FROM     contact c
 14                              GROUP BY c.member_id) dt
 15                      WHERE    dt.member_id = m.member_id));

8 rows updated.

SQL> 
SQL> -- Modify the MEMBER table to add a NOT NULL constraint to the MEMBER_TYPE column.
SQL> ALTER TABLE member
  2    MODIFY (member_type  NUMBER  CONSTRAINT nn_member_1  NOT NULL);

Table altered.

SQL> 
SQL> -- Use SQL*Plus report formatting commands.
SQL> COLUMN member_id          FORMAT 999999 HEADING "MEMBER|ID"
SQL> COLUMN members            FORMAT 999999 HEADING "MEMBER|QTY #"
SQL> COLUMN member_type   FORMAT 999999 HEADING "MEMBER|TYPE|ID #"
SQL> COLUMN common_lookup_id   FORMAT 999999 HEADING "MEMBER|LOOKUP|ID #"
SQL> COLUMN common_lookup_type FORMAT A12       HEADING "COMMON|LOOKUP|TYPE"
SQL> SELECT      m.member_id
  2  ,        COUNT(contact_id) AS MEMBERS
  3  ,        m.member_type
  4  ,        cl.common_lookup_id
  5  ,        cl.common_lookup_type
  6  FROM        member m INNER JOIN contact c
  7  ON  m.member_id = c.member_id INNER JOIN common_lookup cl
  8  ON  m.member_type = cl.common_lookup_id
  9  GROUP BY m.member_id
 10  ,        m.member_type
 11  ,        cl.common_lookup_id
 12  ,        cl.common_lookup_type
 13  ORDER BY m.member_id;

                 MEMBER  MEMBER COMMON
 MEMBER  MEMBER    TYPE  LOOKUP LOOKUP
     ID   QTY #    ID #    ID # TYPE
------- ------- ------- ------- ------------
   1001       2    1004    1004 GROUP
   1002       2    1004    1004 GROUP
   1003       3    1004    1004 GROUP
   1004       1    1003    1003 INDIVIDUAL
   1005       1    1003    1003 INDIVIDUAL
   1006       1    1003    1003 INDIVIDUAL
   1007       1    1003    1003 INDIVIDUAL
   1008       1    1003    1003 INDIVIDUAL

8 rows selected.

SQL> 
SQL> -- Commit changes.
SQL> COMMIT;

Commit complete.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
SQL> 
SQL> @@rental_inserts.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   rental_inserts.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  29-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --
SQL> -- ------------------------------------------------------------------
SQL> --  This seeds data in the video store model.
SQL> --   - Inserts the data in the rental table for 5 records and
SQL> --     then inserts 9 dependent records in a non-sequential
SQL> --     order.
SQL> --   - A non-sequential order requires that you use subqueries
SQL> --     to discover the foreign key values for the inserts.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Open log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL rental_inserts.txt
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> -- Insert 5 records in the RENTAL table.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> INSERT INTO rental
  2  ( rental_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_s1.nextval
 12  ,(SELECT   contact_id
 13    FROM     contact
 14    WHERE    last_name = 'Vizquel'
 15    AND      first_name = 'Oscar')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental
  2  ( rental_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_s1.nextval
 12  ,(SELECT   contact_id
 13    FROM     contact
 14    WHERE    last_name = 'Vizquel'
 15    AND      first_name = 'Doreen')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental
  2  ( rental_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_s1.nextval
 12  ,(SELECT   contact_id
 13    FROM     contact
 14    WHERE    last_name = 'Sweeney'
 15    AND      first_name = 'Meaghan')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental
  2  ( rental_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_s1.nextval
 12  ,(SELECT   contact_id
 13    FROM     contact
 14    WHERE    last_name = 'Sweeney'
 15    AND      first_name = 'Ian')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental
  2  ( rental_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_s1.nextval
 12  ,(SELECT   contact_id
 13    FROM     contact
 14    WHERE    last_name = 'Winn'
 15    AND      first_name = 'Brian')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

1 row created.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> -- Insert 9 records in the RENTAL_ITEM table.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Vizquel'
 16    AND      c.first_name = 'Oscar')
 17  ,(SELECT   i.item_id
 18    FROM     item i
 19    ,        common_lookup cl
 20    WHERE    i.item_title = 'Star Wars I'
 21    AND      i.item_subtitle = 'Phantom Menace'
 22    AND      i.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r inner join contact c
 13    ON       r.customer_id = c.contact_id
 14    WHERE    c.last_name = 'Vizquel'
 15    AND      c.first_name = 'Oscar')
 16  ,(SELECT   d.item_id
 17    FROM     item d join common_lookup cl
 18    ON       d.item_title = 'Star Wars II'
 19    WHERE    d.item_subtitle = 'Attack of the Clones'
 20    AND      d.item_type = cl.common_lookup_id
 21    AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 22  , 1001
 23  , SYSDATE
 24  , 1001
 25  , SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Vizquel'
 16    AND      c.first_name = 'Oscar')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'Star Wars III'
 21    AND      d.item_subtitle = 'Revenge of the Sith'
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Vizquel'
 16    AND      c.first_name = 'Doreen')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'I Remember Mama'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'BLU-RAY')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Vizquel'
 16    AND      c.first_name = 'Doreen')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'Camelot'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'BLU-RAY')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Sweeney'
 16    AND      c.first_name = 'Meaghan')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'Hook'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'BLU-RAY')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Sweeney'
 16    AND      c.first_name = 'Ian')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'Cars'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'XBOX')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Winn'
 16    AND      c.first_name = 'Brian')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'RoboCop'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'XBOX')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Winn'
 16    AND      c.first_name = 'Brian')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'The Hunt for Red October'
 21    AND      d.item_subtitle = 'Special Collector''s Edition'
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row created.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify nine rental agreements, some with one and some
SQL> --   with more than one rental item.
SQL> -- ------------------------------------------------------------------
SQL> COL member_id       FORMAT 9999 HEADING "Member|ID #"
SQL> COL account_number  FORMAT A10     HEADING "Account|Number"
SQL> COL full_name       FORMAT A20  HEADING "Name|(Last, First MI)"
SQL> COL rental_id       FORMAT 9999 HEADING "Rent|ID #"
SQL> COL rental_item_id  FORMAT 9999 HEADING "Rent|Item|ID #"
SQL> COL item_title      FORMAT A26  HEADING "Item Title"
SQL> SELECT      m.member_id
  2  ,        m.account_number
  3  ,        c.last_name || ', ' || c.first_name
  4  ||  CASE
  5             WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  6           END AS full_name
  7  ,        r.rental_id
  8  ,        ri.rental_item_id
  9  ,        i.item_title
 10  FROM        member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 11           rental r ON c.contact_id = r.customer_id INNER JOIN
 12           rental_item ri ON r.rental_id = ri.rental_id INNER JOIN
 13           item i ON ri.item_id = i.item_id
 14  ORDER BY r.rental_id;

                                              Rent
Member Account    Name                  Rent  Item
  ID # Number     (Last, First MI)      ID #  ID # Item Title
------ ---------- -------------------- ----- ----- --------------------------
  1002 B293-71446 Vizquel, Oscar        1001  1001 Star Wars I
  1002 B293-71446 Vizquel, Oscar        1001  1002 Star Wars II
  1002 B293-71446 Vizquel, Oscar        1001  1003 Star Wars III
  1002 B293-71446 Vizquel, Doreen       1002  1005 Camelot
  1002 B293-71446 Vizquel, Doreen       1002  1004 I Remember Mama
  1003 B293-71447 Sweeney, Meaghan      1003  1006 Hook
  1003 B293-71447 Sweeney, Ian M        1004  1007 Cars
  1001 B293-71445 Winn, Brian           1005  1009 The Hunt for Red October
  1001 B293-71445 Winn, Brian           1005  1008 RoboCop

9 rows selected.

SQL> 
SQL> -- Commit changes.
SQL> COMMIT;

Commit complete.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
SQL> @@create_view.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   system_user_inserts.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  30-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --
SQL> -- ------------------------------------------------------------------
SQL> -- This creates tables, sequences, indexes, and constraints necessary
SQL> -- to begin lesson #3. Demonstrates proper process and syntax.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Insert statement demonstrates a mandatory-only column override signature.
SQL> -- ------------------------------------------------------------------
SQL> -- TIP: When a comment ends the last line, you must use a forward slash on
SQL> -- on the next line to run the statement rather than a semicolon.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Open log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL create_view.txt
SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #1
SQL> --  --------
SQL> --   Display the rows in the member and contact tables.
SQL> -- --------------------------------------------------------
SQL> 
SQL> COL member_id           FORMAT 9999  HEADING "Member|ID #"
SQL> COL members             FORMAT 9999  HEADING "Member|#"
SQL> COL common_lookup_type     FORMAT A12   HEADING "Common|Lookup Type"
SQL> SELECT      m.member_id
  2  ,        COUNT(contact_id) AS MEMBERS
  3  ,        cl.common_lookup_type
  4  FROM        member m INNER JOIN contact c
  5  ON  m.member_id = c.member_id INNER JOIN common_lookup cl
  6  ON  m.member_type = cl.common_lookup_id
  7  GROUP BY m.member_id
  8  ,        m.member_type
  9  ,        cl.common_lookup_id
 10  ,        cl.common_lookup_type
 11  ORDER BY m.member_id;

Member Member Common
  ID #      # Lookup Type
------ ------ ------------
  1001      2 GROUP
  1002      2 GROUP
  1003      3 GROUP
  1004      1 INDIVIDUAL
  1005      1 INDIVIDUAL
  1006      1 INDIVIDUAL
  1007      1 INDIVIDUAL
  1008      1 INDIVIDUAL

8 rows selected.

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #2
SQL> --  --------
SQL> --   Create a view .
SQL> -- --------------------------------------------------------
SQL> CREATE OR REPLACE VIEW current_rental AS
  2    SELECT   m.account_number
  3    ,        c.last_name || ', ' || c.first_name
  4    ||       CASE
  5               WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  6             END AS full_name
  7    ,        i.item_title AS title
  8    ,        i.item_subtitle AS subtitle
  9    ,        SUBSTR(cl.common_lookup_meaning,1,3) AS product
 10    ,        r.check_out_date
 11    ,        r.return_date
 12    FROM     member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 13             rental r ON c.contact_id = r.customer_id INNER JOIN
 14             rental_item ri ON r.rental_id = ri.rental_id INNER JOIN
 15             item i ON ri.item_id = i.item_id INNER JOIN
 16             common_lookup cl ON i.item_id = cl.common_lookup_id
 17    ORDER BY 1, 2, 3;

View created.

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #3
SQL> --  --------
SQL> --   Display the content of a view .
SQL> -- --------------------------------------------------------
SQL> COL full_name      FORMAT A24
SQL> COL title          FORMAT A30
SQL> COL subtitlei      FORMAT A4
SQL> COL product        FORMAT A7
SQL> COL check_out_date FORMAT A11
SQL> COL return_date    FORMAT A11
SQL> SELECT      cr.full_name
  2  ,        cr.title
  3  ,        cr.check_out_date
  4  ,        cr.return_date
  5  FROM        current_rental cr;

Name
(Last, First MI)         TITLE                          CHECK_OUT_D RETURN_DATE
------------------------ ------------------------------ ----------- -----------
Winn, Brian              RoboCop                        06-MAY-19   11-MAY-19
Winn, Brian              The Hunt for Red October       06-MAY-19   11-MAY-19
Vizquel, Oscar           Star Wars I                    06-MAY-19   11-MAY-19
Vizquel, Oscar           Star Wars II                   06-MAY-19   11-MAY-19
Vizquel, Oscar           Star Wars III                  06-MAY-19   11-MAY-19
Sweeney, Ian M           Cars                           06-MAY-19   11-MAY-19

6 rows selected.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
SQL> 
SQL> SPOOL seeding.txt
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify seven rows of chained inserts to the five
SQL> --   dependent tables.
SQL> -- ------------------------------------------------------------------
SQL> --    1. MEMBER
SQL> --    2. CONTACT
SQL> --    3. ADDRESS
SQL> --    4. STREET_ADDRESS
SQL> --    5. TELEPHONE
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> COL member_id       FORMAT 9999 HEADING "Acct|ID #"
SQL> COL account_number  FORMAT A10     HEADING "Account|Number"
SQL> COL full_name       FORMAT A16  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10     HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT      m.member_id
  2  ,        m.account_number
  3  ,        c.last_name || ', ' || c.first_name
  4  ||  CASE
  5             WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  6           END AS full_name
  7  ,        a.city
  8  ,        a.state_province
  9  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
 10  FROM        member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 11           address a ON c.contact_id = a.contact_id INNER JOIN
 12           street_address sa ON a.address_id = sa.address_id INNER JOIN
 13           telephone t ON c.contact_id = t.contact_id AND a.address_id = t.address_id
 14  WHERE       last_name IN ('Sweeney','Vizquel','Winn');

 Acct Account    Name
 ID # Number     (Last, First MI) City         State      Telephone
----- ---------- ---------------- ------------ ---------- ------------------
 1001 B293-71445 Winn, Randi      San Jose     CA         001-(408) 111-1111
 1001 B293-71445 Winn, Brian      San Jose     CA         001-(408) 111-1111
 1002 B293-71446 Vizquel, Oscar   San Jose     CA         USA-(408) 222-2222
 1002 B293-71446 Vizquel, Doreen  San Jose     CA         USA-(408) 222-2222
 1003 B293-71447 Sweeney, Meaghan San Jose     CA         USA-(408) 333-3333
 1003 B293-71447 Sweeney, Matthew San Jose     CA         USA-(408) 333-3333
 1003 B293-71447 Sweeney, Ian M   San Jose     CA         USA-(408) 333-3333

7 rows selected.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Display the 21 inserts into the item table.
SQL> -- ------------------------------------------------------------------
SQL> SET PAGESIZE 99
SQL> COL item_id                FORMAT 9999  HEADING "Item|ID #"
SQL> COL common_lookup_meaning  FORMAT A20  HEADING "Item Description"
SQL> COL item_title             FORMAT A30  HEADING "Item Title"
SQL> COL item_release_date      FORMAT A11  HEADING "Item|Release|Date"
SQL> SELECT      i.item_id
  2  ,        cl.common_lookup_meaning
  3  ,        i.item_title
  4  ,        i.item_release_date
  5  FROM        item i INNER JOIN common_lookup cl ON i.item_type = cl.common_lookup_id;

                                                          Item
 Item                                                     Release
 ID # Item Description     Item Title                     Date
----- -------------------- ------------------------------ -----------
 1001 DVD: Wide Screen     The Hunt for Red October       02-MAR-90
 1002 DVD: Wide Screen     Star Wars I                    04-MAY-99
 1003 DVD: Full Screen     Star Wars II                   16-MAY-02
 1004 DVD: Wide Screen     Star Wars II                   16-MAY-02
 1005 DVD: Wide Screen     Star Wars III                  19-MAY-05
 1006 DVD: Wide Screen     The Chronicles of Narnia       16-MAY-02
 1007 XBOX                 RoboCop                        24-JUL-03
 1008 XBOX                 Pirates of the Caribbean       30-JUN-03
 1009 XBOX                 The Chronicles of Narnia       30-JUN-03
 1010 Nintendo Gamecube    MarioKart                      17-NOV-03
 1011 Playstation2         Splinter Cell                  08-APR-03
 1012 Playstation2         Need for Speed                 15-NOV-04
 1013 XBOX                 The DaVinci Code               19-MAY-06
 1014 XBOX                 Cars                           28-APR-06
 1015 Blu-ray              Beau Geste                     01-MAR-92
 1016 Blu-ray              I Remember Mama                05-JAN-98
 1017 Blu-ray              Tora! Tora! Tora!              02-NOV-99
 1018 Blu-ray              A Man for All Seasons          28-JUN-94
 1019 Blu-ray              Hook                           11-DEC-91
 1020 Blu-ray              Around the World in 80 Days    04-DEC-92
 1021 Blu-ray              Camelot                        15-MAY-98

21 rows selected.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify five individual rows of chained inserts through
SQL> --   a procedure into the five dependent tables.
SQL> -- ------------------------------------------------------------------
SQL> COL account_number  FORMAT A10     HEADING "Account|Number"
SQL> COL full_name       FORMAT A20  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10     HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT      m.account_number
  2  ,        c.last_name || ', ' || c.first_name
  3  ||  CASE
  4             WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  5           END AS full_name
  6  ,        a.city
  7  ,        a.state_province
  8  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
  9  FROM        member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 10           address a ON c.contact_id = a.contact_id INNER JOIN
 11           street_address sa ON a.address_id = sa.address_id INNER JOIN
 12           telephone t ON c.contact_id = t.contact_id AND a.address_id = t.address_id
 13  WHERE       m.member_type = (SELECT common_lookup_id
 14                            FROM   common_lookup
 15                            WHERE  common_lookup_context = 'MEMBER'
 16                            AND    common_lookup_type = 'INDIVIDUAL');

Account    Name
Number     (Last, First MI)     City         State      Telephone
---------- -------------------- ------------ ---------- ------------------
R11-514-34 Clinton, Goeffrey W  Provo        Utah       001-(801) 423-1234
R11-514-35 Moss, Wendy          Provo        Utah       001-(801) 423-1235
R11-514-36 Gretelz, Simon J     Provo        Utah       001-(801) 423-1236
R11-514-37 Royal, Elizabeth J   Provo        Utah       001-(801) 423-1237
R11-514-38 Smith, Brian N       Spanish Fork Utah       001-(801) 423-1238

5 rows selected.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify nine rental agreements, some with one and some
SQL> --   with more than one rental item.
SQL> -- ------------------------------------------------------------------
SQL> COL member_id       FORMAT 9999 HEADING "Member|ID #"
SQL> COL account_number  FORMAT A10     HEADING "Account|Number"
SQL> COL full_name       FORMAT A20  HEADING "Name|(Last, First MI)"
SQL> COL rental_id       FORMAT 9999 HEADING "Rent|ID #"
SQL> COL rental_item_id  FORMAT 9999 HEADING "Rent|Item|ID #"
SQL> COL item_title      FORMAT A26  HEADING "Item Title"
SQL> SELECT      m.member_id
  2  ,        m.account_number
  3  ,        c.last_name || ', ' || c.first_name
  4  ||  CASE
  5             WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  6           END AS full_name
  7  ,        r.rental_id
  8  ,        ri.rental_item_id
  9  ,        i.item_title
 10  FROM        member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 11           rental r ON c.contact_id = r.customer_id INNER JOIN
 12           rental_item ri ON r.rental_id = ri.rental_id INNER JOIN
 13           item i ON ri.item_id = i.item_id
 14  ORDER BY r.rental_id;

                                              Rent
Member Account    Name                  Rent  Item
  ID # Number     (Last, First MI)      ID #  ID # Item Title
------ ---------- -------------------- ----- ----- --------------------------
  1002 B293-71446 Vizquel, Oscar        1001  1001 Star Wars I
  1002 B293-71446 Vizquel, Oscar        1001  1002 Star Wars II
  1002 B293-71446 Vizquel, Oscar        1001  1003 Star Wars III
  1002 B293-71446 Vizquel, Doreen       1002  1005 Camelot
  1002 B293-71446 Vizquel, Doreen       1002  1004 I Remember Mama
  1003 B293-71447 Sweeney, Meaghan      1003  1006 Hook
  1003 B293-71447 Sweeney, Ian M        1004  1007 Cars
  1001 B293-71445 Winn, Brian           1005  1009 The Hunt for Red October
  1001 B293-71445 Winn, Brian           1005  1008 RoboCop

9 rows selected.

SQL> 
SQL> SPOOL OFF
SQL> 
SQL> 
